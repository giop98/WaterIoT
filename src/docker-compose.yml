services:
  example:
    build: 
      context: ./
      dockerfile: ./services/example/Dockerfile
    healthcheck:
      test: ["CMD-SHELL", "cat out.log | grep -c Init!"]
      interval: 5s
      timeout: 2s
      retries: 5

  catalog:
    build: 
      context: ./
      dockerfile: ./services/catalog/Dockerfile
    ports:
      - "8080:8080"
    hostname: "catalog"
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li localhost:8080/catalog | grep -c '200 OK'"]
      interval: 15s
      timeout: 2s
      retries: 5

  calculator:
    build: 
      context: ./
      dockerfile: ./services/calculator/Dockerfile
    ports:
      - "8081:8081"
    hostname: "calculator"
    depends_on:
      catalog:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/calculator | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5


  telegramadaptor:
    build: 
      context: ./
      dockerfile: ./services/telegram/Dockerfile
    ports:
      - "8085:8085"
    hostname : "telegramadaptor"
    depends_on:
      catalog:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/telegramadaptor | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    environment:
      - TELEGRAMAPAPIKEY=${TELEGRAMAPAPIKEY}
    volumes:
      - ${PWD}/services/telegram/data.json:/app/services/telegram/data.json:rw

  arduinodevconn:
    build: 
      context: ./
      dockerfile: ./services/arduinodevconn/Dockerfile
    ports:
      - "8086:8086"
    hostname: "arduinodevconn0"
    depends_on:
      catalog:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/arduinodevconn?devid=0 | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    # devices:
    #   - "/dev/i2c-1:/dev/i2c-1"
    environment:
      - ONRASPBERRY=${ONRASPBERRY}

  arduinodevconn2:
    build: 
      context: ./
      dockerfile: ./services/arduinodevconn2/Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      catalog:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/arduinodevconn?devid=1 | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    # devices:
    #   - "/dev/i2c-1:/dev/i2c-1"  
    environment:
      - ONRASPBERRY=${ONRASPBERRY}

  raspberrydevconn:
    build: 
      context: ./
      dockerfile: ./services/raspberrydevconn/Dockerfile
    privileged: true
    ports:
      - "8088:8088"
    depends_on:
      catalog:
          condition: service_started
      deviceconfig:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/raspberrydevconn?devid=0 | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    # devices:
    #   - "/dev/i2c-1:/dev/i2c-1"
    #   - "/dev/gpiomem:/dev/gpiomem" 
    environment:
      - ONRASPBERRY=${ONRASPBERRY}

  raspberrydevconn2:
    build: 
      context: ./
      dockerfile: ./services/raspberrydevconn2/Dockerfile
    privileged: true
    ports:
      - "8090:8090"
    depends_on:
      catalog:
          condition: service_started
      deviceconfig:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/raspberrydevconn?devid=1 | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    # devices:
    #   - "/dev/i2c-1:/dev/i2c-1"
    #   - "/dev/gpiomem:/dev/gpiomem"
    environment:
      - ONRASPBERRY=${ONRASPBERRY}
  
  openweatheradaptor:
    build: 
      context: ./
      dockerfile: ./services/openweatheradaptor/Dockerfile
    ports:
      - "8082:8082"
    hostname: "openweatheradaptor"
    depends_on:
      catalog:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/openweatheradaptor | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    environment:
      - OPENWETHERMAPAPIKEY=${OPENWETHERMAPAPIKEY}

  thingspeakadaptor:
    build: 
      context: ./
      dockerfile: ./services/thingspeakadaptor/Dockerfile
    ports:
      - "8083:8083"
    hostname: "thingspeakadaptor"
    depends_on:
      catalog:
        condition: service_started
      arduinodevconn:
        condition: service_started
      raspberrydevconn:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/thingspeakadaptor | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    environment:
      - THINGSPEAKAPIKEYTEMPERATUREWRITE=${THINGSPEAKAPIKEYTEMPERATUREWRITE}
      - THINGSPEAKAPIKEYTEMPERATUREREAD=${THINGSPEAKAPIKEYTEMPERATUREREAD}
      - THINGSPEAKAPIKEYHUMIDITYWRITE=${THINGSPEAKAPIKEYHUMIDITYWRITE}
      - THINGSPEAKAPIKEYHUMIDITYREAD=${THINGSPEAKAPIKEYHUMIDITYREAD}
      - THINGSPEAKAPIKEYSOILWRITE=${THINGSPEAKAPIKEYSOILWRITE}
      - THINGSPEAKAPIKEYSOILREAD=${THINGSPEAKAPIKEYSOILREAD}
      - CHANNELIDTEMPERATURE=${CHANNELIDTEMPERATURE}
      - CHANNELIDHUMIDITY=${CHANNELIDHUMIDITY}
      - CHANNELIDSOIL=${CHANNELIDSOIL}

  deviceconfig:
    build: 
      context: ./
      dockerfile: ./services/deviceconfig/Dockerfile
    ports:
      - "8087:8087"
    hostname: "deviceconfig"
    depends_on:
      catalog:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/deviceconfig | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    volumes:
      - ${PWD}/services/deviceconfig/confs.json:/app/services/deviceconfig/confs.json:rw

  nodered:
    build:
      context: ./services/nodered
      dockerfile: Dockerfile
    ports:
      - "1881:1880"
    depends_on:
      arduinodevconn:
        condition: service_started
      raspberrydevconn:
        condition: service_started
      openweatheradaptor:
        condition: service_started
      thingspeakadaptor:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:1880 || exit 1"]
      interval: 15s
      timeout: 30s
      retries: 5

  uptime:
    build:
      context: ./
      dockerfile: ./services/uptime/Dockerfile
    ports:
      - "9000:3001" 
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li localhost:3001 | grep -c '200 OK'"]
      interval: 15s
      timeout: 2s
      retries: 5
    # volumes:
    #   - ${PWD}/services/uptime/data:/app/data
  wateringcontrol:
    build: 
      context: ./
      dockerfile: ./services/wateringcontrol/Dockerfile
    ports:
      - "8091:8091"
    hostname: "wateringcontrol"
    depends_on:
      catalog:
          condition: service_started
      raspberrydevconn:
          condition: service_started
      deviceconfig:
          condition: service_started
      telegramadaptor:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/wateringcontrol | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5

  wateringdatabase:
    build: 
      context: ./
      dockerfile: ./services/wateringdatabase/Dockerfile
    ports:
      - "8092:8092"
    hostname: "wateringdatabase"
    depends_on:
      catalog:
          condition: service_started
      raspberrydevconn:
          condition: service_started
      deviceconfig:
          condition: service_started
      telegramadaptor:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f -Li catalog:8080/catalog/services/wateringdatabase | grep online | grep -c true"]
      interval: 15s
      timeout: 2s
      retries: 5
    volumes:
      - ${PWD}/services/wateringdatabase/database.json:/app/services/wateringdatabase/database.json:rw
