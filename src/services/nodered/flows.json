[
    {
        "id": "6644ea9bf3513060",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d345a28cf5a1a276",
        "type": "mqtt in",
        "z": "6644ea9bf3513060",
        "name": "subscriberAirTemp",
        "topic": "/ThingSpeakAdaptor/airtemp",
        "qos": "2",
        "datatype": "json",
        "broker": "73dd0102c2465c32",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 780,
        "wires": [
            [
                "23831f35c978ce7c",
                "78b616fd459ef226"
            ]
        ]
    },
    {
        "id": "e8290b67a4197e91",
        "type": "ui_chart",
        "z": "6644ea9bf3513060",
        "name": "",
        "group": "9c715f7262b589f7",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Air Temperature chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": " ",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "20",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "9d13a3d53ab81e05",
        "type": "mqtt in",
        "z": "6644ea9bf3513060",
        "name": "subscriberSoilHum",
        "topic": "/ThingSpeakAdaptor/soilhum",
        "qos": "2",
        "datatype": "json",
        "broker": "73dd0102c2465c32",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "bc177b446e667e02",
                "a3e602bd16b29889"
            ]
        ]
    },
    {
        "id": "61125d8d1a4ec9b6",
        "type": "ui_chart",
        "z": "6644ea9bf3513060",
        "name": "",
        "group": "6d55652b11d1503d",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Soil Humidity chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "200",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "b2bff48ab9e027d7",
        "type": "mqtt in",
        "z": "6644ea9bf3513060",
        "name": "subscriberAirHum",
        "topic": "/ThingSpeakAdaptor/airhum",
        "qos": "2",
        "datatype": "json",
        "broker": "73dd0102c2465c32",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1540,
        "wires": [
            [
                "1be8d10c5b46345f",
                "413d9fef1d873adc"
            ]
        ]
    },
    {
        "id": "75b473799f49a9d8",
        "type": "ui_chart",
        "z": "6644ea9bf3513060",
        "name": "",
        "group": "39d17713b68b1b67",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Air Humidity chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "20",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "5a01521c0c95157b",
        "type": "http request",
        "z": "6644ea9bf3513060",
        "name": "Request wether",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://openweatheradaptor:8082/currentweather?lat={{latitude}}&lon={{longitude}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 880,
        "y": 240,
        "wires": [
            [
                "ea227e2980de4d35"
            ]
        ]
    },
    {
        "id": "e275e663d784c501",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 860,
        "wires": []
    },
    {
        "id": "72e7b7e596d04321",
        "type": "ui_template",
        "z": "6644ea9bf3513060",
        "group": "797b907f8cd74d9f",
        "name": "Deploy Wether/City",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<div align=\"center\">\n<big><b>{{msg.name}}</b></big>\n<p>\n<img  src=\"{{msg.payload}}\" />\n</p>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1410,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ea227e2980de4d35",
        "type": "python3-function",
        "z": "6644ea9bf3513060",
        "name": "Set API with variables",
        "func": "payload=msg[\"payload\"]\nmsg={}\nmsg[\"payload\"]=payload[\"weather\"][0][\"icon\"]\nmsg[\"payload\"]=\"http://openweathermap.org/img/wn/\"+msg[\"payload\"]+\"@2x.png\"\nmsg[\"name\"]=payload[\"name\"]\nreturn msg",
        "outputs": 1,
        "x": 1130,
        "y": 240,
        "wires": [
            [
                "72e7b7e596d04321",
                "71355c581bd6e6c2"
            ]
        ]
    },
    {
        "id": "ef2955c013057f2c",
        "type": "inject",
        "z": "6644ea9bf3513060",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "b63c5b867f4ae8cb"
            ]
        ]
    },
    {
        "id": "b63c5b867f4ae8cb",
        "type": "http request",
        "z": "6644ea9bf3513060",
        "name": "Request position",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://deviceconfig:8087/configs?path=/system/location",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "79d0aabe19f2e075",
                "e572287c6b405919"
            ]
        ]
    },
    {
        "id": "e08b4b1d404b534a",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "79d0aabe19f2e075",
        "type": "python3-function",
        "z": "6644ea9bf3513060",
        "name": "Set longitude/latitude",
        "func": "payload=msg[\"payload\"]\nmsg={}\nmsg[\"latitude\"]=payload[\"lat\"]\nmsg[\"longitude\"]=payload[\"lon\"]\nreturn msg",
        "outputs": 1,
        "x": 660,
        "y": 300,
        "wires": [
            [
                "5a01521c0c95157b",
                "e08b4b1d404b534a"
            ]
        ]
    },
    {
        "id": "835751f5847b8367",
        "type": "ui_dropdown",
        "z": "6644ea9bf3513060",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "9c715f7262b589f7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "choiceID",
        "topicType": "str",
        "className": "",
        "x": 680,
        "y": 680,
        "wires": [
            [
                "43722b6d55f913b3",
                "f98bb02ccf3e2dfa"
            ]
        ]
    },
    {
        "id": "43722b6d55f913b3",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 640,
        "wires": []
    },
    {
        "id": "e572287c6b405919",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 400,
        "wires": []
    },
    {
        "id": "71355c581bd6e6c2",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 340,
        "wires": []
    },
    {
        "id": "23831f35c978ce7c",
        "type": "function",
        "z": "6644ea9bf3513060",
        "name": "Global Variable",
        "func": "\nvar deviceID=msg[\"payload\"][\"i\"];\nmsg={};\nmsg[\"deviceid\"]=deviceID;\nvar devices=global.get(\"GlobalDevice\");\nvar i=0;\nvar len=global.get(\"Globalength\");\nwhile(i<len&&deviceID!=devices[i]){\n    i++;\n}\nif(i==len){\n    //i must add the other device into the array of element\n    devices.push(deviceID);\n    global.set(\"GlobalDevice\",devices);\n    global.set(\"Globalength\",len+1);\n}\nmsg[\"options\"]=devices;\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"GlobalDevice\",[]);\nglobal.set(\"Globalength\",0);",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 680,
        "wires": [
            [
                "835751f5847b8367"
            ]
        ]
    },
    {
        "id": "d9d8af5865c37f34",
        "type": "switch",
        "z": "6644ea9bf3513060",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "none",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "airTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 740,
        "wires": [
            [
                "f8f491d3c3e366c8"
            ],
            [
                "e8290b67a4197e91"
            ]
        ]
    },
    {
        "id": "78b616fd459ef226",
        "type": "python3-function",
        "z": "6644ea9bf3513060",
        "name": "",
        "func": "msg[\"topic\"]=\"airTemp\"\nreturn msg",
        "outputs": 1,
        "x": 620,
        "y": 780,
        "wires": [
            [
                "e275e663d784c501",
                "f98bb02ccf3e2dfa"
            ]
        ]
    },
    {
        "id": "05ca7652c28e68b6",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 860,
        "wires": []
    },
    {
        "id": "f98bb02ccf3e2dfa",
        "type": "function",
        "z": "6644ea9bf3513060",
        "name": "",
        "func": "switch(msg.topic){\n    case \"airTemp\":\n        if(msg.payload.i==global.get(\"deviceID\")){\n            value=msg.payload.v;\n            msg.payload=value;\n            msg.topic=\"airTemp\";\n            return msg;\n        }\n        else{\n            msg.topic=\"none\";\n            return msg;\n        }\n        break;\n    case \"choiceID\":\n        if(msg.payload!= global.get(\"deviceID\")){\n            global.set(\"deviceID\",msg.payload);\n            msg[\"payload\"]=[];\n            msg[\"topic\"]=\"airTemp\";\n        }\n        else{\n            msg.topic=\"none\";\n        }\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"deviceID\",0);",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 760,
        "wires": [
            [
                "d9d8af5865c37f34",
                "05ca7652c28e68b6"
            ]
        ]
    },
    {
        "id": "f8f491d3c3e366c8",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 720,
        "wires": []
    },
    {
        "id": "c17db91e1de015ab",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "choose the id",
        "info": "",
        "x": 690,
        "y": 620,
        "wires": []
    },
    {
        "id": "a0d70e9a55f7abda",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "ritorna id e valore",
        "info": "",
        "x": 620,
        "y": 840,
        "wires": []
    },
    {
        "id": "8732a86fc19479d2",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "join di id e decide se mandare il valore",
        "info": "",
        "x": 890,
        "y": 800,
        "wires": []
    },
    {
        "id": "085a1ed7ca46f984",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1300,
        "wires": []
    },
    {
        "id": "4cb3cec8feb73f5e",
        "type": "ui_dropdown",
        "z": "6644ea9bf3513060",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "6d55652b11d1503d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "choiceID",
        "topicType": "str",
        "className": "",
        "x": 680,
        "y": 1120,
        "wires": [
            [
                "bfb55e34366ca957",
                "f017c1af1c71c0a6"
            ]
        ]
    },
    {
        "id": "bfb55e34366ca957",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1080,
        "wires": []
    },
    {
        "id": "bc177b446e667e02",
        "type": "function",
        "z": "6644ea9bf3513060",
        "name": "Global Variable",
        "func": "\nvar deviceID=msg[\"payload\"][\"i\"];\nmsg={};\nmsg[\"deviceid\"]=deviceID;\nvar devices=global.get(\"GlobalDevice\");\nvar i=0;\nvar len=global.get(\"Globalength\");\nwhile(i<len&&deviceID!=devices[i]){\n    i++;\n}\nif(i==len){\n    //i must add the other device into the array of element\n    devices.push(deviceID);\n    global.set(\"GlobalDevice\",devices);\n    global.set(\"Globalength\",len+1);\n}\nmsg[\"options\"]=devices;\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"GlobalDevice\",[]);\nglobal.set(\"Globalength\",0);",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "4cb3cec8feb73f5e"
            ]
        ]
    },
    {
        "id": "e752121341039b92",
        "type": "switch",
        "z": "6644ea9bf3513060",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "none",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SoilHum",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1180,
        "wires": [
            [
                "7c0c7188f037a025"
            ],
            [
                "61125d8d1a4ec9b6"
            ]
        ]
    },
    {
        "id": "a3e602bd16b29889",
        "type": "python3-function",
        "z": "6644ea9bf3513060",
        "name": "",
        "func": "msg[\"topic\"]=\"SoilHum\"\nreturn msg",
        "outputs": 1,
        "x": 560,
        "y": 1220,
        "wires": [
            [
                "085a1ed7ca46f984",
                "f017c1af1c71c0a6"
            ]
        ]
    },
    {
        "id": "72557f1490fdf7b4",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f017c1af1c71c0a6",
        "type": "function",
        "z": "6644ea9bf3513060",
        "name": "",
        "func": "switch(msg.topic){\n    case \"SoilHum\":\n        if(msg.payload.i==global.get(\"deviceID\")){\n            value=msg.payload.v;\n            msg.payload=value;\n            msg.topic=\"SoilHum\";\n            return msg;\n        }\n        else{\n            msg.topic=\"none\";\n            return msg;\n        }\n        break;\n    case \"choiceID\":\n        if(msg.payload!= global.get(\"deviceID\")){\n            global.set(\"deviceID\",msg.payload);\n            msg[\"payload\"]=[];\n            msg[\"topic\"]=\"SoilHum\";\n        }\n        else{\n            msg.topic=\"none\";\n        }\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"deviceID\",0);",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1200,
        "wires": [
            [
                "e752121341039b92",
                "72557f1490fdf7b4"
            ]
        ]
    },
    {
        "id": "7c0c7188f037a025",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 1160,
        "wires": []
    },
    {
        "id": "25101216f0a452a1",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "choose the id",
        "info": "",
        "x": 690,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e535951ae9a0095e",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "ritorna id e valore",
        "info": "",
        "x": 560,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b58a0f24813f6b9b",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "join di id e decide se mandare il valore",
        "info": "",
        "x": 890,
        "y": 1240,
        "wires": []
    },
    {
        "id": "8ab56fef0e5eed30",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1620,
        "wires": []
    },
    {
        "id": "ca18f0420972fb90",
        "type": "ui_dropdown",
        "z": "6644ea9bf3513060",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "39d17713b68b1b67",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "choiceID",
        "topicType": "str",
        "className": "",
        "x": 720,
        "y": 1440,
        "wires": [
            [
                "cc120e5b98b41127",
                "527730717e1a2c16"
            ]
        ]
    },
    {
        "id": "cc120e5b98b41127",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1400,
        "wires": []
    },
    {
        "id": "1be8d10c5b46345f",
        "type": "function",
        "z": "6644ea9bf3513060",
        "name": "Global Variable",
        "func": "\nvar deviceID=msg[\"payload\"][\"i\"];\nmsg={};\nmsg[\"deviceid\"]=deviceID;\nvar devices=global.get(\"GlobalDevice\");\nvar i=0;\nvar len=global.get(\"Globalength\");\nwhile(i<len&&deviceID!=devices[i]){\n    i++;\n}\nif(i==len){\n    //i must add the other device into the array of element\n    devices.push(deviceID);\n    global.set(\"GlobalDevice\",devices);\n    global.set(\"Globalength\",len+1);\n}\nmsg[\"options\"]=devices;\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"GlobalDevice\",[]);\nglobal.set(\"Globalength\",0);",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1440,
        "wires": [
            [
                "ca18f0420972fb90"
            ]
        ]
    },
    {
        "id": "75cca8d8f7628188",
        "type": "switch",
        "z": "6644ea9bf3513060",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "none",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "airHum",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 1500,
        "wires": [
            [
                "1737948493f697b0"
            ],
            [
                "75b473799f49a9d8"
            ]
        ]
    },
    {
        "id": "413d9fef1d873adc",
        "type": "python3-function",
        "z": "6644ea9bf3513060",
        "name": "",
        "func": "msg[\"topic\"]=\"airHum\"\nreturn msg",
        "outputs": 1,
        "x": 660,
        "y": 1540,
        "wires": [
            [
                "8ab56fef0e5eed30",
                "527730717e1a2c16"
            ]
        ]
    },
    {
        "id": "0f3ace8b8e40cbc0",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1620,
        "wires": []
    },
    {
        "id": "527730717e1a2c16",
        "type": "function",
        "z": "6644ea9bf3513060",
        "name": "",
        "func": "switch(msg.topic){\n    case \"airHum\":\n        if(msg.payload.i==global.get(\"deviceID\")){\n            value=msg.payload.v;\n            msg.payload=value;\n            msg.topic=\"airHum\";\n            return msg;\n        }\n        else{\n            msg.topic=\"none\";\n            return msg;\n        }\n        break;\n    case \"choiceID\":\n        if(msg.payload!= global.get(\"deviceID\")){\n            global.set(\"deviceID\",msg.payload);\n            msg[\"payload\"]=[];\n            msg[\"topic\"]=\"airHum\";\n        }\n        else{\n            msg.topic=\"none\";\n        }\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"deviceID\",0);",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1520,
        "wires": [
            [
                "75cca8d8f7628188",
                "0f3ace8b8e40cbc0"
            ]
        ]
    },
    {
        "id": "1737948493f697b0",
        "type": "debug",
        "z": "6644ea9bf3513060",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1480,
        "wires": []
    },
    {
        "id": "ac3167a114df60e2",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "choose the id",
        "info": "",
        "x": 730,
        "y": 1380,
        "wires": []
    },
    {
        "id": "a914d71f9e16e391",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "ritorna id e valore",
        "info": "",
        "x": 660,
        "y": 1600,
        "wires": []
    },
    {
        "id": "7b7a24354f1776df",
        "type": "comment",
        "z": "6644ea9bf3513060",
        "name": "join di id e decide se mandare il valore",
        "info": "",
        "x": 930,
        "y": 1560,
        "wires": []
    },
    {
        "id": "73dd0102c2465c32",
        "type": "mqtt-broker",
        "name": "mosquitto",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9c715f7262b589f7",
        "type": "ui_group",
        "name": "AirTempTab",
        "tab": "aa8b95e31965cabf",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6d55652b11d1503d",
        "type": "ui_group",
        "name": "SoilHumTab",
        "tab": "aa8b95e31965cabf",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "39d17713b68b1b67",
        "type": "ui_group",
        "name": "AirHumidityTab",
        "tab": "aa8b95e31965cabf",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "797b907f8cd74d9f",
        "type": "ui_group",
        "name": "Meteo",
        "tab": "aa8b95e31965cabf",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aa8b95e31965cabf",
        "type": "ui_tab",
        "name": "UiTab",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]